parameter (or (or (or (unit %complete_task_sizzler) (unit %confirm_deposit)) (or (unit %confirm_withdrawal) (nat %deposit))) (or (or (address %update_governor) (pair %update_staking_parameters (int %deposit_delay) (int %withdrawal_delay))) (or (address %update_task_manager) (or (pair %update_task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (nat %withdraw)))));
storage   (pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))));
code
  {
    UNPAIR;     # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                DROP;       # @storage
                # == complete_task_sizzler ==
                # sp.verify(sp.sender == self.data.task_manager, 'NOT_AUTHORISED') # @storage
                DUP;        # @storage : @storage
                GET 3;      # pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager) : @storage
                CDR;        # address : @storage
                SENDER;     # @sender : address : @storage
                COMPARE;    # int : @storage
                EQ;         # bool : @storage
                IF
                  {}
                  {
                    PUSH string "NOT_AUTHORISED"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
                # sp.verify(self.data.withdrawals.get(sp.sender, default_value = sp.record(amount = 0, confirmation_at = sp.timestamp(0))).amount == 0, 'WITHDRAWAL_PENDING') # @storage
                DUP;        # @storage : @storage
                GET 6;      # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                PUSH nat 0; # nat : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                SWAP;       # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : nat : @storage
                SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : nat : @storage
                GET;        # option (pair (nat %amount) (timestamp %confirmation_at)) : nat : @storage
                IF_NONE
                  {
                    PUSH (pair nat timestamp) (Pair 0 "1970-01-01T00:00:00Z"); # pair nat timestamp : nat : @storage
                  }
                  {}; # pair nat timestamp : nat : @storage
                CAR;        # nat : nat : @storage
                COMPARE;    # int : @storage
                EQ;         # bool : @storage
                IF
                  {}
                  {
                    PUSH string "WITHDRAWAL_PENDING"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
                # if sp.as_nat(sp.now - self.data.sizzlers[sp.source].last_reset_at) > self.data.task_parameters.task_limit_reset_period: # @storage
                DUP;        # @storage : @storage
                GET 5;      # pair (nat %lp_tokens_per_task) (nat %task_limit_reset_period) : @storage
                CDR;        # nat : @storage
                SWAP;       # @storage : nat
                DUP;        # @storage : @storage : nat
                DUG 2;      # @storage : nat : @storage
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : nat : @storage
                GET 4;      # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @storage
                SOURCE;     # @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @storage
                GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @storage
                IF_NONE
                  {
                    PUSH int 222; # int : nat : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @storage
                GET 6;      # timestamp : nat : @storage
                NOW;        # @now : timestamp : nat : @storage
                SUB;        # int : nat : @storage
                ISNAT;      # option nat : nat : @storage
                IF_NONE
                  {
                    PUSH int 231; # int : nat : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @storage
                COMPARE;    # int : @storage
                GT;         # bool : @storage
                IF
                  {
                    # self.data.sizzlers[sp.source].task_limit = self.data.sizzlers[sp.source].stake // self.data.task_parameters.lp_tokens_per_task # @storage
                    DUP;        # @storage : @storage
                    UNPAIR;     # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                    UNPAIR;     # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                    SWAP;       # pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                    UNPAIR;     # pair address nat : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                    SWAP;       # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                    DUP;        # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                    SOURCE;     # @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                    DUP;        # @source : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                    DUG 2;      # @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                    GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                    IF_NONE
                      {
                        PUSH int 232; # int : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                    DIG 6;      # @storage : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    DUP;        # @storage : @storage : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    GET 5;      # pair (nat %lp_tokens_per_task) (nat %task_limit_reset_period) : @storage : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    CAR;        # nat : @storage : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SWAP;       # @storage : nat : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : nat : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    GET 4;      # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SOURCE;     # @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    IF_NONE
                      {
                        PUSH int 222; # int : nat : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    CAR;        # nat : nat : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    EDIV;       # option (pair nat nat) : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    IF_NONE
                      {
                        PUSH int 232; # int : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                      }; # nat : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    UPDATE 5;   # @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SOME;       # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SWAP;       # @source : option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    UPDATE;     # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    # self.data.sizzlers[sp.source].task_counter = 0 # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    DUP;        # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SOURCE;     # @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    DUP;        # @source : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    DUG 2;      # @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    IF_NONE
                      {
                        PUSH int 233; # int : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    PUSH nat 0; # nat : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    UPDATE 3;   # @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SOME;       # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SWAP;       # @source : option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    UPDATE;     # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    # self.data.sizzlers[sp.source].last_reset_at = sp.now # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    DUP;        # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SOURCE;     # @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    DUP;        # @source : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    DUG 2;      # @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    IF_NONE
                      {
                        PUSH int 234; # int : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    NOW;        # @now : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    UPDATE 6;   # @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SOME;       # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SWAP;       # @source : option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    UPDATE;     # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SWAP;       # pair address nat : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    PAIR;       # pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SWAP;       # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    PAIR;       # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    PAIR;       # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                  }
                  {}; # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                # sp.verify(self.data.sizzlers[sp.source].task_counter < self.data.sizzlers[sp.source].task_limit, 'TASK_LIMIT_REACHED') # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUP;        # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET 4;      # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SOURCE;     # @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                IF_NONE
                  {
                    PUSH int 222; # int : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET 5;      # nat : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SWAP;       # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : nat
                DUP;        # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : nat
                DUG 2;      # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : nat : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : nat : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET 4;      # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SOURCE;     # @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                IF_NONE
                  {
                    PUSH int 222; # int : nat : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET 3;      # nat : nat : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                COMPARE;    # int : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                LT;         # bool : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                IF
                  {}
                  {
                    PUSH string "TASK_LIMIT_REACHED"; # string : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                    FAILWITH;   # FAILED
                  }; # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                # self.data.sizzlers[sp.source].task_counter += 1 # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                UNPAIR;     # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                UNPAIR;     # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SWAP;       # pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                UNPAIR;     # pair address nat : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SWAP;       # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                DUP;        # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SOURCE;     # @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                DUP;        # @source : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                DUG 2;      # @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                IF_NONE
                  {
                    PUSH int 240; # int : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                DUP;        # @some : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                GET 3;      # nat : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PUSH nat 1; # nat : nat : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                ADD;        # nat : @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                UPDATE 3;   # @some : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SOME;       # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @source : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SWAP;       # @source : option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                UPDATE;     # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SWAP;       # pair address nat : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SWAP;       # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
              }
              {
                # == confirm_deposit ==
                # sp.verify(self.data.deposits[sp.sender].amount > 0, 'NO_DEPOSIT_TO_CONFIRM') # @parameter%confirm_deposit : @storage
                PUSH nat 0; # nat : @parameter%confirm_deposit : @storage
                DUP 3;      # @storage : nat : @parameter%confirm_deposit : @storage
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : nat : @parameter%confirm_deposit : @storage
                CAR;        # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : nat : @parameter%confirm_deposit : @storage
                CAR;        # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : nat : @parameter%confirm_deposit : @storage
                SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : nat : @parameter%confirm_deposit : @storage
                GET;        # option (pair (nat %amount) (timestamp %confirmation_at)) : nat : @parameter%confirm_deposit : @storage
                IF_NONE
                  {
                    PUSH int 135; # int : nat : @parameter%confirm_deposit : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @parameter%confirm_deposit : @storage
                CAR;        # nat : nat : @parameter%confirm_deposit : @storage
                COMPARE;    # int : @parameter%confirm_deposit : @storage
                GT;         # bool : @parameter%confirm_deposit : @storage
                IF
                  {}
                  {
                    PUSH string "NO_DEPOSIT_TO_CONFIRM"; # string : @parameter%confirm_deposit : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%confirm_deposit : @storage
                SWAP;       # @storage : @parameter%confirm_deposit
                # sp.verify(sp.now >= self.data.deposits[sp.sender].confirmation_at, 'BEHIND_CONFIRMATION_TIME') # @storage : @parameter%confirm_deposit
                DUP;        # @storage : @storage : @parameter%confirm_deposit
                DUG 2;      # @storage : @parameter%confirm_deposit : @storage
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter%confirm_deposit : @storage
                CAR;        # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : @parameter%confirm_deposit : @storage
                CAR;        # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @parameter%confirm_deposit : @storage
                SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @parameter%confirm_deposit : @storage
                GET;        # option (pair (nat %amount) (timestamp %confirmation_at)) : @parameter%confirm_deposit : @storage
                IF_NONE
                  {
                    PUSH int 136; # int : @parameter%confirm_deposit : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%confirm_deposit : @storage
                CDR;        # timestamp : @parameter%confirm_deposit : @storage
                NOW;        # @now : timestamp : @parameter%confirm_deposit : @storage
                COMPARE;    # int : @parameter%confirm_deposit : @storage
                GE;         # bool : @parameter%confirm_deposit : @storage
                IF
                  {}
                  {
                    PUSH string "BEHIND_CONFIRMATION_TIME"; # string : @parameter%confirm_deposit : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%confirm_deposit : @storage
                SWAP;       # @storage : @parameter%confirm_deposit
                # if ~ (self.data.sizzlers.contains(sp.sender)): # @storage : @parameter%confirm_deposit
                DUP;        # @storage : @storage : @parameter%confirm_deposit
                DUG 2;      # @storage : @parameter%confirm_deposit : @storage
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter%confirm_deposit : @storage
                GET 4;      # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @parameter%confirm_deposit : @storage
                SENDER;     # @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @parameter%confirm_deposit : @storage
                MEM;        # bool : @parameter%confirm_deposit : @storage
                IF
                  {
                    DROP;       # @storage
                  }
                  {
                    SWAP;       # @storage : @parameter%confirm_deposit
                    # self.data.sizzlers[sp.sender] = sp.record(stake = 0, task_counter = 0, task_limit = 0, last_reset_at = sp.timestamp(0)) # @storage : @parameter%confirm_deposit
                    UNPAIR;     # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%confirm_deposit
                    UNPAIR;     # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%confirm_deposit
                    SWAP;       # pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%confirm_deposit
                    UNPAIR;     # pair address nat : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%confirm_deposit
                    SWAP;       # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%confirm_deposit
                    PUSH timestamp "1970-01-01T00:00:00Z"; # timestamp : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%confirm_deposit
                    PUSH nat 0; # nat : timestamp : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%confirm_deposit
                    DUP;        # nat : nat : timestamp : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%confirm_deposit
                    DUP;        # nat : nat : nat : timestamp : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%confirm_deposit
                    PAIR 4;     # pair nat (pair nat (pair nat timestamp)) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%confirm_deposit
                    DIG 5;      # @parameter%confirm_deposit : pair nat (pair nat (pair nat timestamp)) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    DROP;       # pair nat (pair nat (pair nat timestamp)) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SOME;       # option (pair nat (pair nat (pair nat timestamp))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SENDER;     # @sender : option (pair nat (pair nat (pair nat timestamp))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    UPDATE;     # big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SWAP;       # pair address nat : big_map address (pair nat (pair nat (pair nat timestamp))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    PAIR;       # pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    SWAP;       # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    PAIR;       # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    PAIR;       # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                  }; # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                # self.data.sizzlers[sp.sender].stake += self.data.deposits[sp.sender].amount # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUP;        # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                UNPAIR;     # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                UNPAIR;     # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SWAP;       # pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                UNPAIR;     # pair address nat : big_map address (pair nat (pair nat (pair nat timestamp))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SWAP;       # big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUP;        # big_map address (pair nat (pair nat (pair nat timestamp))) : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SENDER;     # @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUP;        # @sender : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUG 2;      # @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET;        # option (pair nat (pair nat (pair nat timestamp))) : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                IF_NONE
                  {
                    PUSH int 148; # int : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUP;        # @some : @some : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CAR;        # nat : @some : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DIG 7;      # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : nat : @some : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp))))) : nat : @some : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                CAR;        # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : nat : @some : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                CAR;        # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : nat : @some : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : nat : @some : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                GET;        # option (pair (nat %amount) (timestamp %confirmation_at)) : nat : @some : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                IF_NONE
                  {
                    PUSH int 148; # int : nat : @some : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @some : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                CAR;        # nat : nat : @some : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                ADD;        # nat : @some : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                UPDATE 1;   # @some : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SOME;       # option (pair nat (pair nat (pair nat timestamp))) : @sender : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SWAP;       # @sender : option (pair nat (pair nat (pair nat timestamp))) : big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                UPDATE;     # big_map address (pair nat (pair nat (pair nat timestamp))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SWAP;       # pair address nat : big_map address (pair nat (pair nat (pair nat timestamp))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SWAP;       # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                # self.data.deposits[sp.sender].amount = 0 # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                UNPAIR;     # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                DUP;        # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                DUP;        # @sender : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                DUG 2;      # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                GET;        # option (pair (nat %amount) (timestamp %confirmation_at)) : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                IF_NONE
                  {
                    PUSH int 151; # int : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PUSH nat 0; # nat : @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                UPDATE 1;   # @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SOME;       # option (pair (nat %amount) (timestamp %confirmation_at)) : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SWAP;       # @sender : option (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                UPDATE;     # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (big_map address (pair (nat %amount) (timestamp %confirmation_at))) address : pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (pair (big_map address (pair (nat %amount) (timestamp %confirmation_at))) address) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (pair (pair (big_map address (pair (nat %amount) (timestamp %confirmation_at))) address) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
              }; # pair (pair (pair (big_map address (pair (nat %amount) (timestamp %confirmation_at))) address) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
            NIL operation; # list operation : pair (pair (pair (big_map address (pair (nat %amount) (timestamp %confirmation_at))) address) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
          }
          {
            IF_LEFT
              {
                DROP;       # @storage
                # == confirm_withdrawal ==
                # sp.verify(self.data.withdrawals[sp.sender].amount > 0, 'NO_WITHDRAWAL_TO_CONFIRM') # @storage
                DUP;        # @storage : @storage
                GET 6;      # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                PUSH nat 0; # nat : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                SWAP;       # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : nat : @storage
                SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : nat : @storage
                GET;        # option (pair (nat %amount) (timestamp %confirmation_at)) : nat : @storage
                IF_NONE
                  {
                    PUSH int 187; # int : nat : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @storage
                CAR;        # nat : nat : @storage
                COMPARE;    # int : @storage
                GT;         # bool : @storage
                IF
                  {}
                  {
                    PUSH string "NO_WITHDRAWAL_TO_CONFIRM"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
                # sp.verify(sp.now >= self.data.withdrawals[sp.sender].confirmation_at, 'BEHIND_CONFIRMATION_TIME') # @storage
                DUP;        # @storage : @storage
                GET 6;      # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                GET;        # option (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                IF_NONE
                  {
                    PUSH int 188; # int : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @storage
                CDR;        # timestamp : @storage
                NOW;        # @now : timestamp : @storage
                COMPARE;    # int : @storage
                GE;         # bool : @storage
                IF
                  {}
                  {
                    PUSH string "BEHIND_CONFIRMATION_TIME"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
                # self.data.sizzlers[sp.sender].stake = sp.as_nat(self.data.sizzlers[sp.sender].stake - self.data.withdrawals[sp.sender].amount) # @storage
                DUP;        # @storage : @storage
                UNPAIR;     # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                UNPAIR;     # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                SWAP;       # pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                UNPAIR;     # pair address nat : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                SWAP;       # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                DUP;        # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                SENDER;     # @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                DUP;        # @sender : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                DUG 2;      # @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                IF_NONE
                  {
                    PUSH int 193; # int : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                DUP 7;      # @storage : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                GET 6;      # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                GET;        # option (pair (nat %amount) (timestamp %confirmation_at)) : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                IF_NONE
                  {
                    PUSH int 193; # int : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                CAR;        # nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @storage
                DIG 7;      # @storage : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                GET 4;      # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SENDER;     # @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                IF_NONE
                  {
                    PUSH int 190; # int : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                CAR;        # nat : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SUB;        # int : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                ISNAT;      # option nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                IF_NONE
                  {
                    PUSH int 193; # int : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                UPDATE 1;   # @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SOME;       # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SWAP;       # @sender : option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                UPDATE;     # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SWAP;       # pair address nat : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SWAP;       # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                # sp.transfer(sp.list([sp.record(from_ = sp.self_address, txs = sp.list([sp.record(to_ = sp.sender, token_id = sp.snd(self.data.sizzle_lp_token), amount = self.data.withdrawals[sp.sender].amount)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), sp.fst(self.data.sizzle_lp_token), entry_point='transfer').open_some()) # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUP;        # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET 3;      # pair address nat : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CAR;        # address : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                IF_NONE
                  {
                    PUSH int 51; # int : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                NIL operation; # list operation : @some : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SWAP;       # @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                PUSH mutez 0; # mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUP 6;      # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET 6;      # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET;        # option (pair (nat %amount) (timestamp %confirmation_at)) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                IF_NONE
                  {
                    PUSH int 202; # int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CAR;        # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUP 7;      # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET 3;      # pair address nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CDR;        # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SENDER;     # @sender : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                PAIR 3;     # pair @sender (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                PAIR;       # pair @self (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CONS;       # list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SWAP;       # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                # self.data.sizzlers[sp.sender].task_limit = self.data.sizzlers[sp.sender].stake // self.data.task_parameters.lp_tokens_per_task # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                DUP;        # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                DUG 2;      # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                UNPAIR;     # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                UNPAIR;     # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SWAP;       # pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                UNPAIR;     # pair address nat : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SWAP;       # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUP;        # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SENDER;     # @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUP;        # @sender : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUG 2;      # @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                IF_NONE
                  {
                    PUSH int 207; # int : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DIG 7;      # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                DUP;        # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                GET 5;      # pair (nat %lp_tokens_per_task) (nat %task_limit_reset_period) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                CAR;        # nat : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                SWAP;       # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                GET 4;      # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                SENDER;     # @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                IF_NONE
                  {
                    PUSH int 190; # int : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                CAR;        # nat : nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                EDIV;       # option (pair nat nat) : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                IF_NONE
                  {
                    PUSH int 207; # int : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                    FAILWITH;   # FAILED
                  }
                  {
                    CAR;        # nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                  }; # nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                UPDATE 5;   # @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                SOME;       # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                SWAP;       # @sender : option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                UPDATE;     # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                # self.data.sizzlers[sp.sender].task_counter = 0 # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                DUP;        # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                SENDER;     # @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                DUP;        # @sender : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                DUG 2;      # @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                IF_NONE
                  {
                    PUSH int 208; # int : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                PUSH nat 0; # nat : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                UPDATE 3;   # @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                SOME;       # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                SWAP;       # @sender : option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                UPDATE;     # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                # self.data.sizzlers[sp.sender].last_reset_at = sp.now # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                DUP;        # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                SENDER;     # @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                DUP;        # @sender : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                DUG 2;      # @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                IF_NONE
                  {
                    PUSH int 209; # int : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                NOW;        # @now : @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                UPDATE 6;   # @some : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                SOME;       # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                SWAP;       # @sender : option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                UPDATE;     # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair address nat : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                SWAP;       # pair address nat : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                PAIR;       # pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                SWAP;       # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                PAIR;       # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : list operation
                PAIR;       # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                # self.data.withdrawals[sp.sender].amount = 0 # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                DUP;        # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                GET 6;      # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                DUP;        # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                DUP;        # @sender : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                DUG 2;      # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                GET;        # option (pair (nat %amount) (timestamp %confirmation_at)) : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                IF_NONE
                  {
                    PUSH int 212; # int : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                PUSH nat 0; # nat : @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                UPDATE 1;   # @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                SOME;       # option (pair (nat %amount) (timestamp %confirmation_at)) : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                SWAP;       # @sender : option (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                UPDATE;     # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                UPDATE 6;   # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation
                SWAP;       # list operation : pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
              }
              {
                # == deposit ==
                # sp.verify(params > 0, 'ZERO_DEPOSIT') # @parameter%deposit : @storage
                DUP;        # @parameter%deposit : @parameter%deposit : @storage
                PUSH nat 0; # nat : @parameter%deposit : @parameter%deposit : @storage
                COMPARE;    # int : @parameter%deposit : @storage
                LT;         # bool : @parameter%deposit : @storage
                IF
                  {}
                  {
                    PUSH string "ZERO_DEPOSIT"; # string : @parameter%deposit : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%deposit : @storage
                SWAP;       # @storage : @parameter%deposit
                # if ~ (self.data.deposits.contains(sp.sender)): # @storage : @parameter%deposit
                DUP;        # @storage : @storage : @parameter%deposit
                DUG 2;      # @storage : @parameter%deposit : @storage
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter%deposit : @storage
                CAR;        # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : @parameter%deposit : @storage
                CAR;        # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @parameter%deposit : @storage
                SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @parameter%deposit : @storage
                MEM;        # bool : @parameter%deposit : @storage
                IF
                  {}
                  {
                    SWAP;       # @storage : @parameter%deposit
                    # self.data.deposits[sp.sender] = sp.record(amount = 0, confirmation_at = sp.timestamp(0)) # @storage : @parameter%deposit
                    UNPAIR;     # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                    UNPAIR;     # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                    UNPAIR;     # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                    PUSH (option (pair nat timestamp)) (Some (Pair 0 "1970-01-01T00:00:00Z")); # option (pair nat timestamp) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                    SENDER;     # @sender : option (pair nat timestamp) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                    UPDATE;     # big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                    PAIR;       # pair (big_map address (pair nat timestamp)) address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                    PAIR;       # pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                    PAIR;       # pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : @parameter%deposit
                    SWAP;       # @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                  }; # @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SWAP;       # pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : @parameter%deposit
                # self.data.deposits[sp.sender].amount += params # pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : @parameter%deposit
                UNPAIR;     # pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                UNPAIR;     # pair (big_map address (pair nat timestamp)) address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                UNPAIR;     # big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                DUP;        # big_map address (pair nat timestamp) : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                SENDER;     # @sender : big_map address (pair nat timestamp) : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                DUP;        # @sender : @sender : big_map address (pair nat timestamp) : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                DUG 2;      # @sender : big_map address (pair nat timestamp) : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                GET;        # option (pair nat timestamp) : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                IF_NONE
                  {
                    PUSH int 115; # int : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                DUP;        # @some : @some : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                CAR;        # nat : @some : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                DUP 8;      # @parameter%deposit : nat : @some : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                ADD;        # nat : @some : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                UPDATE 1;   # @some : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                SOME;       # option (pair nat timestamp) : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                SWAP;       # @sender : option (pair nat timestamp) : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                UPDATE;     # big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                PAIR;       # pair (big_map address (pair nat timestamp)) address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                PAIR;       # pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                PAIR;       # pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : @parameter%deposit
                # self.data.deposits[sp.sender].confirmation_at = sp.add_seconds(sp.now, self.data.staking_parameters.deposit_delay) # pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : @parameter%deposit
                DUP;        # pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : @parameter%deposit
                DUG 2;      # pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                UNPAIR;     # pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                UNPAIR;     # pair (big_map address (pair nat timestamp)) address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                UNPAIR;     # big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUP;        # big_map address (pair nat timestamp) : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SENDER;     # @sender : big_map address (pair nat timestamp) : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUP;        # @sender : @sender : big_map address (pair nat timestamp) : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUG 2;      # @sender : big_map address (pair nat timestamp) : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET;        # option (pair nat timestamp) : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                IF_NONE
                  {
                    PUSH int 118; # int : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DIG 7;      # pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : @some : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                GET 3;      # pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager) : @some : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                CAR;        # pair (int %deposit_delay) (int %withdrawal_delay) : @some : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                CAR;        # int : @some : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                NOW;        # @now : int : @some : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                ADD;        # timestamp : @some : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                UPDATE 2;   # @some : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                SOME;       # option (pair nat timestamp) : @sender : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                SWAP;       # @sender : option (pair nat timestamp) : big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                UPDATE;     # big_map address (pair nat timestamp) : address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                PAIR;       # pair (big_map address (pair nat timestamp)) address : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                PAIR;       # pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%deposit
                PAIR;       # pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : @parameter%deposit
                SWAP;       # @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                # sp.transfer(sp.list([sp.record(from_ = sp.sender, txs = sp.list([sp.record(to_ = sp.self_address, token_id = sp.snd(self.data.sizzle_lp_token), amount = params)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), sp.fst(self.data.sizzle_lp_token), entry_point='transfer').open_some()) # @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                NIL operation; # list operation : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUP 3;      # pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : list operation : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CAR;        # pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : list operation : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET 3;      # pair address nat : list operation : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CAR;        # address : list operation : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : list operation : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                IF_NONE
                  {
                    PUSH int 51; # int : list operation : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                PUSH mutez 0; # mutez : @some : list operation : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%deposit : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DIG 5;      # @parameter%deposit : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                DUP 7;      # pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))) : @parameter%deposit : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CAR;        # pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter%deposit : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                GET 3;      # pair address nat : @parameter%deposit : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CDR;        # nat : @parameter%deposit : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SELF_ADDRESS; # @self : nat : @parameter%deposit : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                PAIR 3;     # pair @self (pair nat @parameter%deposit) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                SENDER;     # @sender : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                PAIR;       # pair @sender (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
                CONS;       # list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
              }; # list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair address nat) (big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
          }; # list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%update_governor
                # == update_governor ==
                # sp.verify(sp.sender == self.data.governor, 'NOT_AUTHORISED') # @storage : @parameter%update_governor
                DUP;        # @storage : @storage : @parameter%update_governor
                DUG 2;      # @storage : @parameter%update_governor : @storage
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter%update_governor : @storage
                CAR;        # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : @parameter%update_governor : @storage
                CDR;        # address : @parameter%update_governor : @storage
                SENDER;     # @sender : address : @parameter%update_governor : @storage
                COMPARE;    # int : @parameter%update_governor : @storage
                EQ;         # bool : @parameter%update_governor : @storage
                IF
                  {}
                  {
                    PUSH string "NOT_AUTHORISED"; # string : @parameter%update_governor : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%update_governor : @storage
                SWAP;       # @storage : @parameter%update_governor
                # self.data.governor = params # @storage : @parameter%update_governor
                UNPAIR;     # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%update_governor
                UNPAIR;     # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%update_governor
                CAR;        # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%update_governor
                DIG 3;      # @parameter%update_governor : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                SWAP;       # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @parameter%update_governor : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (big_map address (pair (nat %amount) (timestamp %confirmation_at))) @parameter%update_governor : pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (pair (big_map address (pair (nat %amount) (timestamp %confirmation_at))) @parameter%update_governor) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (pair (pair (big_map address (pair (nat %amount) (timestamp %confirmation_at))) @parameter%update_governor) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
              }
              {
                SWAP;       # @storage : @parameter%update_staking_parameters
                # == update_staking_parameters ==
                # sp.verify(sp.sender == self.data.governor, 'NOT_AUTHORISED') # @storage : @parameter%update_staking_parameters
                DUP;        # @storage : @storage : @parameter%update_staking_parameters
                DUG 2;      # @storage : @parameter%update_staking_parameters : @storage
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter%update_staking_parameters : @storage
                CAR;        # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : @parameter%update_staking_parameters : @storage
                CDR;        # address : @parameter%update_staking_parameters : @storage
                SENDER;     # @sender : address : @parameter%update_staking_parameters : @storage
                COMPARE;    # int : @parameter%update_staking_parameters : @storage
                EQ;         # bool : @parameter%update_staking_parameters : @storage
                IF
                  {}
                  {
                    PUSH string "NOT_AUTHORISED"; # string : @parameter%update_staking_parameters : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%update_staking_parameters : @storage
                SWAP;       # @storage : @parameter%update_staking_parameters
                # self.data.staking_parameters = params # @storage : @parameter%update_staking_parameters
                UNPAIR;     # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%update_staking_parameters
                SWAP;       # pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter%update_staking_parameters
                UNPAIR;     # pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager) : pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))) : pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter%update_staking_parameters
                CDR;        # address : pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))) : pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter%update_staking_parameters
                DIG 3;      # @parameter%update_staking_parameters : address : pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))) : pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))
                PAIR;       # pair @parameter%update_staking_parameters address : pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))) : pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))
                PAIR;       # pair (pair @parameter%update_staking_parameters address) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))
                SWAP;       # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair @parameter%update_staking_parameters address) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair @parameter%update_staking_parameters address) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
              }; # pair (pair (pair (big_map address (pair (nat %amount) (timestamp %confirmation_at))) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair (int %deposit_delay) (int %withdrawal_delay)) address) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
          }
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%update_task_manager
                # == update_task_manager ==
                # sp.verify(sp.sender == self.data.governor, 'NOT_AUTHORISED') # @storage : @parameter%update_task_manager
                DUP;        # @storage : @storage : @parameter%update_task_manager
                DUG 2;      # @storage : @parameter%update_task_manager : @storage
                CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter%update_task_manager : @storage
                CAR;        # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : @parameter%update_task_manager : @storage
                CDR;        # address : @parameter%update_task_manager : @storage
                SENDER;     # @sender : address : @parameter%update_task_manager : @storage
                COMPARE;    # int : @parameter%update_task_manager : @storage
                EQ;         # bool : @parameter%update_task_manager : @storage
                IF
                  {}
                  {
                    PUSH string "NOT_AUTHORISED"; # string : @parameter%update_task_manager : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%update_task_manager : @storage
                SWAP;       # @storage : @parameter%update_task_manager
                # self.data.task_manager = params # @storage : @parameter%update_task_manager
                UNPAIR;     # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : @parameter%update_task_manager
                SWAP;       # pair (pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter%update_task_manager
                UNPAIR;     # pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager) : pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))) : pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter%update_task_manager
                CAR;        # pair (int %deposit_delay) (int %withdrawal_delay) : pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))) : pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter%update_task_manager
                DIG 3;      # @parameter%update_task_manager : pair (int %deposit_delay) (int %withdrawal_delay) : pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))) : pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))
                SWAP;       # pair (int %deposit_delay) (int %withdrawal_delay) : @parameter%update_task_manager : pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))) : pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))
                PAIR;       # pair (pair (int %deposit_delay) (int %withdrawal_delay)) @parameter%update_task_manager : pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))) : pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))
                PAIR;       # pair (pair (pair (int %deposit_delay) (int %withdrawal_delay)) @parameter%update_task_manager) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))) : pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))
                SWAP;       # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : pair (pair (pair (int %deposit_delay) (int %withdrawal_delay)) @parameter%update_task_manager) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))
                PAIR;       # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair (int %deposit_delay) (int %withdrawal_delay)) @parameter%update_task_manager) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%update_task_parameters
                    # == update_task_parameters ==
                    # sp.verify(sp.sender == self.data.governor, 'NOT_AUTHORISED') # @storage : @parameter%update_task_parameters
                    DUP;        # @storage : @storage : @parameter%update_task_parameters
                    DUG 2;      # @storage : @parameter%update_task_parameters : @storage
                    CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter%update_task_parameters : @storage
                    CAR;        # pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor) : @parameter%update_task_parameters : @storage
                    CDR;        # address : @parameter%update_task_parameters : @storage
                    SENDER;     # @sender : address : @parameter%update_task_parameters : @storage
                    COMPARE;    # int : @parameter%update_task_parameters : @storage
                    EQ;         # bool : @parameter%update_task_parameters : @storage
                    IF
                      {}
                      {
                        PUSH string "NOT_AUTHORISED"; # string : @parameter%update_task_parameters : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%update_task_parameters : @storage
                    # self.data.task_parameters = params # @parameter%update_task_parameters : @storage
                    UPDATE 5;   # @storage
                  }
                  {
                    # == withdraw ==
                    # sp.verify(params > 0, 'ZERO_WITHDRAWAL') # @parameter%withdraw : @storage
                    DUP;        # @parameter%withdraw : @parameter%withdraw : @storage
                    PUSH nat 0; # nat : @parameter%withdraw : @parameter%withdraw : @storage
                    COMPARE;    # int : @parameter%withdraw : @storage
                    LT;         # bool : @parameter%withdraw : @storage
                    IF
                      {}
                      {
                        PUSH string "ZERO_WITHDRAWAL"; # string : @parameter%withdraw : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%withdraw : @storage
                    SWAP;       # @storage : @parameter%withdraw
                    # sp.verify(self.data.sizzlers[sp.sender].stake >= (params + self.data.withdrawals.get(sp.sender, default_value = sp.record(amount = 0, confirmation_at = sp.timestamp(0))).amount), 'WITHDRAWAL_AMOUNT_TOO_HIGH') # @storage : @parameter%withdraw
                    DUP;        # @storage : @storage : @parameter%withdraw
                    DUG 2;      # @storage : @parameter%withdraw : @storage
                    GET 6;      # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @parameter%withdraw : @storage
                    SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @parameter%withdraw : @storage
                    GET;        # option (pair (nat %amount) (timestamp %confirmation_at)) : @parameter%withdraw : @storage
                    IF_NONE
                      {
                        PUSH (pair nat timestamp) (Pair 0 "1970-01-01T00:00:00Z"); # pair nat timestamp : @parameter%withdraw : @storage
                      }
                      {}; # pair nat timestamp : @parameter%withdraw : @storage
                    CAR;        # nat : @parameter%withdraw : @storage
                    SWAP;       # @parameter%withdraw : nat : @storage
                    DUP;        # @parameter%withdraw : @parameter%withdraw : nat : @storage
                    DUG 2;      # @parameter%withdraw : nat : @parameter%withdraw : @storage
                    ADD;        # nat : @parameter%withdraw : @storage
                    DUP 3;      # @storage : nat : @parameter%withdraw : @storage
                    CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : nat : @parameter%withdraw : @storage
                    GET 4;      # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @parameter%withdraw : @storage
                    SENDER;     # @sender : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @parameter%withdraw : @storage
                    GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @parameter%withdraw : @storage
                    IF_NONE
                      {
                        PUSH int 164; # int : nat : @parameter%withdraw : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @parameter%withdraw : @storage
                    CAR;        # nat : nat : @parameter%withdraw : @storage
                    COMPARE;    # int : @parameter%withdraw : @storage
                    GE;         # bool : @parameter%withdraw : @storage
                    IF
                      {}
                      {
                        PUSH string "WITHDRAWAL_AMOUNT_TOO_HIGH"; # string : @parameter%withdraw : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%withdraw : @storage
                    SWAP;       # @storage : @parameter%withdraw
                    # if ~ (self.data.withdrawals.contains(sp.sender)): # @storage : @parameter%withdraw
                    DUP;        # @storage : @storage : @parameter%withdraw
                    DUG 2;      # @storage : @parameter%withdraw : @storage
                    GET 6;      # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @parameter%withdraw : @storage
                    SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @parameter%withdraw : @storage
                    MEM;        # bool : @parameter%withdraw : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%withdraw
                        # self.data.withdrawals[sp.sender] = sp.record(amount = 0, confirmation_at = sp.timestamp(0)) # @storage : @parameter%withdraw
                        DUP;        # @storage : @storage : @parameter%withdraw
                        GET 6;      # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @parameter%withdraw
                        PUSH (option (pair nat timestamp)) (Some (Pair 0 "1970-01-01T00:00:00Z")); # option (pair nat timestamp) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @parameter%withdraw
                        SENDER;     # @sender : option (pair nat timestamp) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @parameter%withdraw
                        UPDATE;     # big_map address (pair nat timestamp) : @storage : @parameter%withdraw
                        UPDATE 6;   # @storage : @parameter%withdraw
                        SWAP;       # @parameter%withdraw : @storage
                      }; # @parameter%withdraw : @storage
                    SWAP;       # @storage : @parameter%withdraw
                    # self.data.withdrawals[sp.sender].amount += params # @storage : @parameter%withdraw
                    DUP;        # @storage : @storage : @parameter%withdraw
                    GET 6;      # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @parameter%withdraw
                    DUP;        # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @parameter%withdraw
                    SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @parameter%withdraw
                    DUP;        # @sender : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @parameter%withdraw
                    DUG 2;      # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @parameter%withdraw
                    GET;        # option (pair (nat %amount) (timestamp %confirmation_at)) : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @parameter%withdraw
                    IF_NONE
                      {
                        PUSH int 176; # int : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @parameter%withdraw
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @parameter%withdraw
                    DUP;        # @some : @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @parameter%withdraw
                    CAR;        # nat : @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @parameter%withdraw
                    DIG 5;      # @parameter%withdraw : nat : @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    ADD;        # nat : @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    UPDATE 1;   # @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    SOME;       # option (pair (nat %amount) (timestamp %confirmation_at)) : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    SWAP;       # @sender : option (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    UPDATE;     # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    UPDATE 6;   # @storage
                    # self.data.withdrawals[sp.sender].confirmation_at = sp.add_seconds(sp.now, self.data.staking_parameters.withdrawal_delay) # @storage
                    DUP;        # @storage : @storage
                    DUP;        # @storage : @storage : @storage
                    GET 6;      # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @storage
                    DUP;        # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @storage
                    SENDER;     # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @storage
                    DUP;        # @sender : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @storage
                    DUG 2;      # @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @storage
                    GET;        # option (pair (nat %amount) (timestamp %confirmation_at)) : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @storage
                    IF_NONE
                      {
                        PUSH int 179; # int : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage : @storage
                    DIG 4;      # @storage : @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    GET 3;      # pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager) : @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    CAR;        # pair (int %deposit_delay) (int %withdrawal_delay) : @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    CDR;        # int : @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    NOW;        # @now : int : @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    ADD;        # timestamp : @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    UPDATE 2;   # @some : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    SOME;       # option (pair (nat %amount) (timestamp %confirmation_at)) : @sender : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    SWAP;       # @sender : option (pair (nat %amount) (timestamp %confirmation_at)) : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    UPDATE;     # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : @storage
                    UPDATE 6;   # @storage
                  }; # @storage
              }; # pair (pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair (int %deposit_delay) (int %withdrawal_delay)) address) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
          }; # pair (pair (pair (big_map address (pair (nat %amount) (timestamp %confirmation_at))) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair (int %deposit_delay) (int %withdrawal_delay)) address) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
        NIL operation; # list operation : pair (pair (pair (big_map address (pair (nat %amount) (timestamp %confirmation_at))) address) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))))) (pair (pair (pair (int %deposit_delay) (int %withdrawal_delay)) address) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
      }; # list operation : pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair (int %deposit_delay) (int %withdrawal_delay)) address) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at)))))
    PAIR;       # pair (list operation) (pair (pair (pair (big_map address (pair nat timestamp)) address) (pair (pair address nat) (big_map address (pair nat (pair nat (pair nat timestamp)))))) (pair (pair (pair (int %deposit_delay) (int %withdrawal_delay)) address) (pair (pair %task_parameters (nat %lp_tokens_per_task) (nat %task_limit_reset_period)) (big_map %withdrawals address (pair (nat %amount) (timestamp %confirmation_at))))))
  };
view
  "get_sizzler" address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))
  {
    UNPAIR;     # @parameter : @storage
    SWAP;       # @storage : @parameter
    # sp.verify(self.data.sizzlers.contains(params), 'INVALID_SIZZLER') # @storage : @parameter
    DUP;        # @storage : @storage : @parameter
    DUG 2;      # @storage : @parameter : @storage
    CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter : @storage
    GET 4;      # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @parameter : @storage
    SWAP;       # @parameter : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @storage
    DUP;        # @parameter : @parameter : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @storage
    DUG 2;      # @parameter : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @parameter : @storage
    MEM;        # bool : @parameter : @storage
    IF
      {}
      {
        PUSH string "INVALID_SIZZLER"; # string : @parameter : @storage
        FAILWITH;   # FAILED
      }; # @parameter : @storage
    SWAP;       # @storage : @parameter
    # sp.result(self.data.sizzlers[params]) # @storage : @parameter
    CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter
    GET 4;      # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @parameter
    SWAP;       # @parameter : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))
    GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at))))
    IF_NONE
      {
        PUSH int 307; # int
        FAILWITH;   # FAILED
      }
      {}; # @some
  };
view
  "get_sizzler_voting_power" address nat
  {
    UNPAIR;     # @parameter : @storage
    SWAP;       # @storage : @parameter
    # sp.verify(self.data.sizzlers.contains(params), 'INVALID_SIZZLER') # @storage : @parameter
    DUP;        # @storage : @storage : @parameter
    DUG 2;      # @storage : @parameter : @storage
    CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : @parameter : @storage
    GET 4;      # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @parameter : @storage
    SWAP;       # @parameter : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @storage
    DUP;        # @parameter : @parameter : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @storage
    DUG 2;      # @parameter : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : @parameter : @storage
    MEM;        # bool : @parameter : @storage
    IF
      {}
      {
        PUSH string "INVALID_SIZZLER"; # string : @parameter : @storage
        FAILWITH;   # FAILED
      }; # @parameter : @storage
    # if self.data.withdrawals.get(params, default_value = sp.record(amount = 0, confirmation_at = sp.timestamp(0))).amount != 0: # @parameter : @storage
    PUSH nat 0; # nat : @parameter : @storage
    DUP 3;      # @storage : nat : @parameter : @storage
    GET 6;      # big_map address (pair (nat %amount) (timestamp %confirmation_at)) : nat : @parameter : @storage
    DUP 3;      # @parameter : big_map address (pair (nat %amount) (timestamp %confirmation_at)) : nat : @parameter : @storage
    GET;        # option (pair (nat %amount) (timestamp %confirmation_at)) : nat : @parameter : @storage
    IF_NONE
      {
        PUSH (pair nat timestamp) (Pair 0 "1970-01-01T00:00:00Z"); # pair nat timestamp : nat : @parameter : @storage
      }
      {}; # pair nat timestamp : nat : @parameter : @storage
    CAR;        # nat : nat : @parameter : @storage
    COMPARE;    # int : @parameter : @storage
    NEQ;        # bool : @parameter : @storage
    IF
      {
        DROP 2;     # 
        # sp.result(0) # 
        PUSH nat 0; # nat
      }
      {
        SWAP;       # @storage : @parameter
        # sp.result(self.data.sizzlers[params].stake // self.data.task_parameters.lp_tokens_per_task) # @storage : @parameter
        DUP;        # @storage : @storage : @parameter
        GET 5;      # pair (nat %lp_tokens_per_task) (nat %task_limit_reset_period) : @storage : @parameter
        CAR;        # nat : @storage : @parameter
        SWAP;       # @storage : nat : @parameter
        CAR;        # pair (pair (big_map %deposits address (pair (nat %amount) (timestamp %confirmation_at))) (address %governor)) (pair (pair %sizzle_lp_token address nat) (big_map %sizzlers address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))))) : nat : @parameter
        GET 4;      # big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat : @parameter
        DIG 2;      # @parameter : big_map address (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat
        GET;        # option (pair (nat %stake) (pair (nat %task_counter) (pair (nat %task_limit) (timestamp %last_reset_at)))) : nat
        IF_NONE
          {
            PUSH int 298; # int : nat
            FAILWITH;   # FAILED
          }
          {}; # @some : nat
        CAR;        # nat : nat
        EDIV;       # option (pair nat nat)
        IF_NONE
          {
            PUSH int 298; # int
            FAILWITH;   # FAILED
          }
          {
            CAR;        # nat
          }; # nat
      }; # nat
  };
view
  "get_staking_parameters" unit (pair (int %deposit_delay) (int %withdrawal_delay))
  {
    CDR;        # @storage
    # sp.result(self.data.staking_parameters) # @storage
    GET 3;      # pair (pair %staking_parameters (int %deposit_delay) (int %withdrawal_delay)) (address %task_manager)
    CAR;        # pair (int %deposit_delay) (int %withdrawal_delay)
  };
view
  "get_task_parameters" unit (pair (nat %lp_tokens_per_task) (nat %task_limit_reset_period))
  {
    CDR;        # @storage
    # sp.result(self.data.task_parameters) # @storage
    GET 5;      # pair (nat %lp_tokens_per_task) (nat %task_limit_reset_period)
  };