parameter (or (or (or (pair %approve (address %spender) (nat %value)) (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat))) (or (pair %getBalance address (contract nat)) (pair %getTotalSupply unit (contract nat)))) (or (or (pair %mint (address %address) (nat %value)) (address %setAdministrator)) (or (pair %transfer (address %from) (pair (address %to) (nat %value))) (address %updateMintAdmin))));
storage   (pair (pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))));
code
  {
    UNPAIR;     # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%approve
                # == approve ==
                # if ~ (self.data.balances.contains(sp.sender)): # @storage : @parameter%approve
                DUP;        # @storage : @storage : @parameter%approve
                DUG 2;      # @storage : @parameter%approve : @storage
                CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%approve : @storage
                GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%approve : @storage
                SENDER;     # @sender : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%approve : @storage
                MEM;        # bool : @parameter%approve : @storage
                IF
                  {}
                  {
                    SWAP;       # @storage : @parameter%approve
                    # self.data.balances[sp.sender] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%approve
                    UNPAIR;     # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    UNPAIR;     # address : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    SWAP;       # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    UNPAIR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    SENDER;     # @sender : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    SWAP;       # @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }; # @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                # sp.verify((self.data.balances[sp.sender].approvals.get(params.spender, default_value = 0) == 0) | (params.value == 0), 'FA1.2_UnsafeAllowanceChange') # @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                PUSH nat 0; # nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUP 3;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                GET 3;      # big_map address (pair (map address nat) nat) : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                SENDER;     # @sender : big_map address (pair (map address nat) nat) : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                GET;        # option (pair (map address nat) nat) : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                IF_NONE
                  {
                    PUSH int 82; # int : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                CAR;        # map address nat : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUP 3;      # @parameter%approve : map address nat : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                CAR;        # address : map address nat : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                GET;        # option nat : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                IF_NONE
                  {
                    PUSH nat 0; # nat : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }
                  {}; # nat : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                COMPARE;    # int : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                EQ;         # bool : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                IF
                  {
                    PUSH bool True; # bool : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }
                  {
                    DUP;        # @parameter%approve : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    CDR;        # nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    PUSH nat 0; # nat : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    COMPARE;    # int : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    EQ;         # bool : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }; # bool : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                IF
                  {}
                  {
                    PUSH string "FA1.2_UnsafeAllowanceChange"; # string : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    FAILWITH;   # FAILED
                  }; # @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                # self.data.balances[sp.sender].approvals[params.spender] = params.value # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                SENDER;     # @sender : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                DUP;        # @sender : @sender : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                DUG 2;      # @sender : big_map address (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                GET;        # option (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                IF_NONE
                  {
                    PUSH int 84; # int : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                DUP;        # @some : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                CAR;        # map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                DUP 8;      # @parameter%approve : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                CDR;        # nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                SOME;       # option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                DIG 8;      # @parameter%approve : option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                CAR;        # address : option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                UPDATE;     # map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                UPDATE 1;   # @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                SOME;       # option (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                SWAP;       # @sender : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                NIL operation; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
              }
              {
                SWAP;       # @storage : @parameter%getAllowance
                # == getAllowance ==
                # if self.data.balances.contains(sp.fst(params).owner): # @storage : @parameter%getAllowance
                DUP;        # @storage : @storage : @parameter%getAllowance
                DUG 2;      # @storage : @parameter%getAllowance : @storage
                CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%getAllowance : @storage
                GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                SWAP;       # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                DUP;        # @parameter%getAllowance : @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                DUG 2;      # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                CAR;        # pair (address %owner) (address %spender) : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                MEM;        # bool : @parameter%getAllowance : @storage
                IF
                  {
                    SWAP;       # @storage : @parameter%getAllowance
                    # sp.result(self.data.balances[sp.fst(params).owner].approvals.get(sp.fst(params).spender, default_value = 0)) # @storage : @parameter%getAllowance
                    DUP;        # @storage : @storage : @parameter%getAllowance
                    DUG 2;      # @storage : @parameter%getAllowance : @storage
                    CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%getAllowance : @storage
                    GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    SWAP;       # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUP;        # @parameter%getAllowance : @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUG 2;      # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    CAR;        # pair (address %owner) (address %spender) : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    IF_NONE
                      {
                        PUSH int 102; # int : @parameter%getAllowance : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%getAllowance : @storage
                    CAR;        # map address nat : @parameter%getAllowance : @storage
                    SWAP;       # @parameter%getAllowance : map address nat : @storage
                    DUP;        # @parameter%getAllowance : @parameter%getAllowance : map address nat : @storage
                    DUG 2;      # @parameter%getAllowance : map address nat : @parameter%getAllowance : @storage
                    CAR;        # pair (address %owner) (address %spender) : map address nat : @parameter%getAllowance : @storage
                    CDR;        # address : map address nat : @parameter%getAllowance : @storage
                    GET;        # option nat : @parameter%getAllowance : @storage
                    IF_NONE
                      {
                        PUSH nat 0; # nat : @parameter%getAllowance : @storage
                      }
                      {}; # nat : @parameter%getAllowance : @storage
                  }
                  {
                    # sp.result(0) # @parameter%getAllowance : @storage
                    PUSH nat 0; # nat : @parameter%getAllowance : @storage
                  }; # nat : @parameter%getAllowance : @storage
                # sp.transfer(__s4.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getAllowance : @storage
                NIL operation; # list operation : nat : @parameter%getAllowance : @storage
                DIG 2;      # @parameter%getAllowance : list operation : nat : @storage
                CDR;        # contract nat : list operation : nat : @storage
                PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                DIG 3;      # nat : mutez : contract nat : list operation : @storage
                TRANSFER_TOKENS; # operation : list operation : @storage
                CONS;       # list operation : @storage
              }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
          }
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%getBalance
                # == getBalance ==
                # if self.data.balances.contains(sp.fst(params)): # @storage : @parameter%getBalance
                DUP;        # @storage : @storage : @parameter%getBalance
                DUG 2;      # @storage : @parameter%getBalance : @storage
                CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%getBalance : @storage
                GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                SWAP;       # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                DUP;        # @parameter%getBalance : @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                DUG 2;      # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                MEM;        # bool : @parameter%getBalance : @storage
                IF
                  {
                    SWAP;       # @storage : @parameter%getBalance
                    # sp.result(self.data.balances[sp.fst(params)].balance) # @storage : @parameter%getBalance
                    DUP;        # @storage : @storage : @parameter%getBalance
                    DUG 2;      # @storage : @parameter%getBalance : @storage
                    CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%getBalance : @storage
                    GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                    SWAP;       # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUP;        # @parameter%getBalance : @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUG 2;      # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                    IF_NONE
                      {
                        PUSH int 94; # int : @parameter%getBalance : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%getBalance : @storage
                    CDR;        # nat : @parameter%getBalance : @storage
                  }
                  {
                    # sp.result(0) # @parameter%getBalance : @storage
                    PUSH nat 0; # nat : @parameter%getBalance : @storage
                  }; # nat : @parameter%getBalance : @storage
                # sp.transfer(__s5.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getBalance : @storage
                NIL operation; # list operation : nat : @parameter%getBalance : @storage
                DIG 2;      # @parameter%getBalance : list operation : nat : @storage
                CDR;        # contract nat : list operation : nat : @storage
                PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                DIG 3;      # nat : mutez : contract nat : list operation : @storage
                TRANSFER_TOKENS; # operation : list operation : @storage
                CONS;       # list operation : @storage
              }
              {
                SWAP;       # @storage : @parameter%getTotalSupply
                # == getTotalSupply ==
                # sp.result(self.data.totalSupply) # @storage : @parameter%getTotalSupply
                DUP;        # @storage : @storage : @parameter%getTotalSupply
                DUG 2;      # @storage : @parameter%getTotalSupply : @storage
                GET 6;      # nat : @parameter%getTotalSupply : @storage
                # sp.transfer(__s6.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getTotalSupply : @storage
                NIL operation; # list operation : nat : @parameter%getTotalSupply : @storage
                DIG 2;      # @parameter%getTotalSupply : list operation : nat : @storage
                CDR;        # contract nat : list operation : nat : @storage
                PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                DIG 3;      # nat : mutez : contract nat : list operation : @storage
                TRANSFER_TOKENS; # operation : list operation : @storage
                CONS;       # list operation : @storage
              }; # list operation : @storage
          }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%mint
                # == mint ==
                # sp.verify(sp.sender == self.data.mintAdmin.open_some(), 'FA1.2_NotAdmin') # @storage : @parameter%mint
                DUP;        # @storage : @storage : @parameter%mint
                DUG 2;      # @storage : @parameter%mint : @storage
                GET 3;      # option address : @parameter%mint : @storage
                IF_NONE
                  {
                    PUSH int 121; # int : @parameter%mint : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%mint : @storage
                SENDER;     # @sender : @some : @parameter%mint : @storage
                COMPARE;    # int : @parameter%mint : @storage
                EQ;         # bool : @parameter%mint : @storage
                IF
                  {}
                  {
                    PUSH string "FA1.2_NotAdmin"; # string : @parameter%mint : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%mint : @storage
                SWAP;       # @storage : @parameter%mint
                # if ~ (self.data.balances.contains(params.address)): # @storage : @parameter%mint
                DUP;        # @storage : @storage : @parameter%mint
                DUG 2;      # @storage : @parameter%mint : @storage
                CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%mint : @storage
                GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                SWAP;       # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                DUP;        # @parameter%mint : @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                DUG 2;      # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                MEM;        # bool : @parameter%mint : @storage
                IF
                  {}
                  {
                    SWAP;       # @storage : @parameter%mint
                    # self.data.balances[params.address] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%mint
                    UNPAIR;     # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                    UNPAIR;     # address : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                    SWAP;       # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                    UNPAIR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                    PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                    DUP 6;      # @parameter%mint : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                    CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                    UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                    SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                    PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                    PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                    SWAP;       # @parameter%mint : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }; # @parameter%mint : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                # self.data.balances[params.address].balance += params.value # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                DUP 6;      # @parameter%mint : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                IF_NONE
                  {
                    PUSH int 123; # int : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                DUP 8;      # @parameter%mint : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                # self.data.totalSupply += params.value # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                GET 6;      # nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                DIG 2;      # @parameter%mint : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                CDR;        # nat : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                ADD;        # nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                UPDATE 6;   # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
              }
              {
                SWAP;       # @storage : @parameter%setAdministrator
                # == setAdministrator ==
                # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # @storage : @parameter%setAdministrator
                DUP;        # @storage : @storage : @parameter%setAdministrator
                DUG 2;      # @storage : @parameter%setAdministrator : @storage
                CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%setAdministrator : @storage
                CAR;        # address : @parameter%setAdministrator : @storage
                SENDER;     # @sender : address : @parameter%setAdministrator : @storage
                COMPARE;    # int : @parameter%setAdministrator : @storage
                EQ;         # bool : @parameter%setAdministrator : @storage
                IF
                  {}
                  {
                    PUSH string "FA1.2_NotAdmin"; # string : @parameter%setAdministrator : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%setAdministrator : @storage
                SWAP;       # @storage : @parameter%setAdministrator
                # self.data.administrator = params # @storage : @parameter%setAdministrator
                UNPAIR;     # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%setAdministrator
                CDR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%setAdministrator
                DIG 2;      # @parameter%setAdministrator : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                PAIR;       # pair @parameter%setAdministrator (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                PAIR;       # pair (pair @parameter%setAdministrator (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
              }; # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
          }
          {
            IF_LEFT
              {
                # == transfer ==
                # sp.verify((params.from_ == sp.sender) | (self.data.balances[params.from_].approvals[sp.sender] >= params.value), 'FA1.2_NotAllowed') # @parameter%transfer : @storage
                DUP;        # @parameter%transfer : @parameter%transfer : @storage
                CAR;        # address : @parameter%transfer : @storage
                SENDER;     # @sender : address : @parameter%transfer : @storage
                COMPARE;    # int : @parameter%transfer : @storage
                EQ;         # bool : @parameter%transfer : @storage
                IF
                  {
                    PUSH bool True; # bool : @parameter%transfer : @storage
                  }
                  {
                    DUP;        # @parameter%transfer : @parameter%transfer : @storage
                    GET 4;      # nat : @parameter%transfer : @storage
                    DUP 3;      # @storage : nat : @parameter%transfer : @storage
                    CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : nat : @parameter%transfer : @storage
                    GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                    DUP 3;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                    IF_NONE
                      {
                        PUSH int 63; # int : nat : @parameter%transfer : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @parameter%transfer : @storage
                    CAR;        # map address nat : nat : @parameter%transfer : @storage
                    SENDER;     # @sender : map address nat : nat : @parameter%transfer : @storage
                    GET;        # option nat : nat : @parameter%transfer : @storage
                    IF_NONE
                      {
                        PUSH int 63; # int : nat : @parameter%transfer : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @parameter%transfer : @storage
                    COMPARE;    # int : @parameter%transfer : @storage
                    GE;         # bool : @parameter%transfer : @storage
                  }; # bool : @parameter%transfer : @storage
                IF
                  {}
                  {
                    PUSH string "FA1.2_NotAllowed"; # string : @parameter%transfer : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%transfer : @storage
                SWAP;       # @storage : @parameter%transfer
                # if ~ (self.data.balances.contains(params.from_)): # @storage : @parameter%transfer
                DUP;        # @storage : @storage : @parameter%transfer
                DUG 2;      # @storage : @parameter%transfer : @storage
                CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%transfer : @storage
                GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                SWAP;       # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                DUG 2;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                MEM;        # bool : @parameter%transfer : @storage
                IF
                  {}
                  {
                    SWAP;       # @storage : @parameter%transfer
                    # self.data.balances[params.from_] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%transfer
                    UNPAIR;     # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    UNPAIR;     # address : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SWAP;       # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    UNPAIR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    DUP 6;      # @parameter%transfer : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                    SWAP;       # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }; # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                # if ~ (self.data.balances.contains(params.to_)): # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                GET 3;      # big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                SWAP;       # @parameter%transfer : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUG 2;      # @parameter%transfer : big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                GET 3;      # address : big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                MEM;        # bool : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                IF
                  {}
                  {
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                    # self.data.balances[params.to_] = sp.record(approvals = {}, balance = 0) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                    UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    DUP 6;      # @parameter%transfer : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    GET 3;      # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                    SWAP;       # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }; # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                # sp.verify(self.data.balances[params.from_].balance >= params.value, 'FA1.2_InsufficientBalance') # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUP;        # @parameter%transfer : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                GET 4;      # nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUP 3;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                GET 3;      # big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUP 3;      # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                CAR;        # address : big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                GET;        # option (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                IF_NONE
                  {
                    PUSH int 69; # int : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                CDR;        # nat : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                COMPARE;    # int : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                GE;         # bool : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                IF
                  {}
                  {
                    PUSH string "FA1.2_InsufficientBalance"; # string : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    FAILWITH;   # FAILED
                  }; # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                # self.data.balances[params.from_].balance = sp.as_nat(self.data.balances[params.from_].balance - params.value) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUP 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                IF_NONE
                  {
                    PUSH int 70; # int : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUP 7;      # @parameter%transfer : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                GET 4;      # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DIG 8;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                GET 3;      # big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                DUP 9;      # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                CAR;        # address : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                GET;        # option (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                IF_NONE
                  {
                    PUSH int 70; # int : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                SUB;        # int : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                ISNAT;      # option nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                IF_NONE
                  {
                    PUSH int 70; # int : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                # self.data.balances[params.to_].balance += params.value # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                DUP 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                GET 3;      # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                IF_NONE
                  {
                    PUSH int 71; # int : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                DUP 8;      # @parameter%transfer : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                GET 4;      # nat : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                SWAP;       # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                # if params.from_ != sp.sender: # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUP;        # @parameter%transfer : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                CAR;        # address : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                SENDER;     # @sender : address : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                COMPARE;    # int : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                NEQ;        # bool : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                IF
                  {
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                    # self.data.balances[params.from_].approvals[sp.sender] = sp.as_nat(self.data.balances[params.from_].approvals[sp.sender] - params.value) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                    DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    DUP 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    IF_NONE
                      {
                        PUSH int 74; # int : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    CAR;        # map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    DUP 8;      # @parameter%transfer : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    GET 4;      # nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    DIG 9;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    GET 3;      # big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                    DIG 9;      # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    CAR;        # address : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    GET;        # option (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    IF_NONE
                      {
                        PUSH int 75; # int : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    CAR;        # map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    SENDER;     # @sender : map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    GET;        # option nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    IF_NONE
                      {
                        PUSH int 75; # int : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    SUB;        # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    ISNAT;      # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    IF_NONE
                      {
                        PUSH int 74; # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    SOME;       # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    SENDER;     # @sender : option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    UPDATE;     # map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    UPDATE 1;   # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }
                  {
                    DROP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }; # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
              }
              {
                SWAP;       # @storage : @parameter%updateMintAdmin
                # == updateMintAdmin ==
                # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # @storage : @parameter%updateMintAdmin
                DUP;        # @storage : @storage : @parameter%updateMintAdmin
                DUG 2;      # @storage : @parameter%updateMintAdmin : @storage
                CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%updateMintAdmin : @storage
                CAR;        # address : @parameter%updateMintAdmin : @storage
                SENDER;     # @sender : address : @parameter%updateMintAdmin : @storage
                COMPARE;    # int : @parameter%updateMintAdmin : @storage
                EQ;         # bool : @parameter%updateMintAdmin : @storage
                IF
                  {}
                  {
                    PUSH string "FA1.2_NotAdmin"; # string : @parameter%updateMintAdmin : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%updateMintAdmin : @storage
                # self.data.mintAdmin = sp.some(params) # @parameter%updateMintAdmin : @storage
                SOME;       # option address : @storage
                UPDATE 3;   # @storage
              }; # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
          }; # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
        NIL operation; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
      }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
    PAIR;       # pair (list operation) (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (option %mintAdmin address) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
  };
view
  "get_total_supply" unit nat
  {
    CDR;        # @storage
    # sp.result(self.data.totalSupply) # @storage
    GET 6;      # nat
  };